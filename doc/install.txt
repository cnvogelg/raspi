install.txt
-----------

1. basic raspberrypi board install

- download raspbian image from raspberry.org
   (current: 2013-07-26-wheezy-raspbian.zip)

- unzip
- attach fresh SD card
- on Mac: unmount volume
  > diskutil unmount /Volume/<Name>
- find out _correct_ /dev/rdisk<n> device for SD Card
  > diskutil list
- write image to SD card
  > sudo dd if=2013-07-26-wheezy-raspbian.img of=/dev/rdisk1 bs=2m
  
- wire raspi with power, monitor, keyboard, mouse
- attach SD card and power on, boot


2. setup in "raspi-config" tool

- "1 expand fs"
- "3 boot behaviour" - no desktop at startup
- "4 I18n Options"
  - "locale" -> de.UTF-8  (disable en_GB*) -> default locale: de.UTF-8
  - "change timezone" -> Europe -> Berlin
  - "setup keyboard"
    -> 105 intl keyboard -> more -> german -> eliminate dead keys
    -> default key set -> keep 
- (optional) "7 overclock": Turbo 1000 MHz  (seems to work only on 512 KiB models)
- "8 Advanced Options"
  - "disable overscan"
  - "hostname"
  - "memory split": GPU -> non-gfx: 16
  - "enable ssh"
  - "update"

# reboot   (perform sd card resize)


3. custom setup

  (I usually perform these steps already in a ssh sesson - cut & paste from here :)
  host> ssh pi@<your_raspi_ip>

  - full update (system/debian updates)

    > sudo -s
    # apt-get update
    # apt-get dist-upgrade

** [OBSOLETE] rpi-update (kernel & firmware updates)

  - install (see https://github.com/Hexxeh/rpi-update/)
    
    # apt-get install git-core
    # wget http://goo.gl/1BOfJ -O /usr/bin/rpi-update && sudo chmod +x /usr/bin/rpi-update
    # rpi-update

** System Config

  - edit /boot/config.txt:

    # 720p HDMI ready monitor
    hdmi_group=1
    hdmi_mode=19

    # 800x600
    hdmi_group=2
    hdmi_mode=9    # @60Hz

** [OBSOLETE] Ethernet

  > ifconfig | grep eth0 -> hw address
   
  - set host name for Fritz!Box DHCP server
    -> edit /etc/dhcp/dhclient.conf
    
       interface "eth0" {
         send host-name = "yourhost-eth";
         send dhcp-client-identifier <mac:add>;
       }
     
  (you need the interface block only if you have additional wlan)

** (Optional) Wifi (here Netgear Mini USB Dongle )

  - check for adapter
    # dmesg
	# iwlist scan
  - in /etc/network/interfaces
       auto wlan0
	   iface wlan0 inet dhcp
	   wpa-conf /etc/wpa.conf
  - create /etc/wpa.conf
	   network={
	   	ssid="<your_ssid>"
	   	key_mgmt=WPA-PSK
	   	psk="<your_passwd>"
	   }
  - add to /etc/dhcp/dhclient.conf
      interface "eth0" {
 	    send host-name = "yourhost";
	    send dhcp-client-identifier <mac:addr:wlan>;
      }
  # ifdown wlan0
  # ifup wlan0
  
- reboot  

** mDNS

  # apt-get install avahi-daemon

** NSF/Autofs (for my public share)

  # apt-get install autofs
  
  - edit /etc/auto.master, add:
  /net	-hosts

  # /etc/init.d/autofs restart  
  
** Add user "chris"

  # adduser --uid 501 chris
  # usermod -a -G adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,netdev,input chris
  
  - link autofs shares for user chris (see below)
  > cd $HOME
  > mkdir net
  > cd net ; ln -s /net/nfs-share share
  
** SSH for "chris"

- push SSH credentials from host machine
  
  host> ssh-copy-id chris@<yourpi>
  host> scp -r ~/.ssh yourpi:

** Stream-line MOTD

  # vi /etc/motd
  --> hostname <--

----- Strip Down Install -----

  # aptitude
  
  - deselect packages
  
  <u>  update sources
  
  

----- Add Ons -----

--- Watterott Display "Rpi-Display" ---

  - install notro's kernel

    # REPO_URI=https://github.com/notro/rpi-firmware rpi-update
    # reboot

  - remove spi from blacklist in /etc/modprobe.d/raspi-blacklist.conf
  
  - install touch screen tools
  
    # apt-get install xinput

  - 8 Bit Display (new RPi Display)

    in /etc/modules add:
        
        fbtft dma
        fbtft_device name=rpi-display speed=32000000 rotate=270
	
  - Touch Panel Driver
  
    in /etc/modules add (in one line):
  
        ads7846_device model=7846 cs=1 speed=2000000 gpio_pendown=25 \
        pressure_max=255 x_plate_ohms=60

  - calibrate:
  
      > git clone https://github.com/tias/xinput_calibrator.git
      > cd xinput_calibrator
      > ./autogen.sh
      > ./configure
      > make
      > sudo make install
      
      > startx &
      > /usr/local/bin/xinput_calibrator 
      > pkill x
      
      copy output to file /usr/share/X11/xorg.conf.d/99-calib.conf:
      
      Section "InputClass"
              Identifier      "calibration"
              MatchProduct    "ADS7846 Touchscreen"
              Option  "Calibration"   "210 3955 3775 260"
              Option  "SwapAxes"      "1"
      EndSection
      
  - edit $HOME/.xinitrc:
  
      xset s off	# don't activate screensaver
      xset -dpms	# disable DPMS (Energy Star) features.
      xset s noblank # don't blank the video device
      exec $HOME/raspi/piradio/piradio.py

  - set fb1 as X11 buffer
  
      vi /usr/share/X11/xorg.conf.d/99-fbdev.conf:
      
      Section "Device"
        Identifier "bla"
        Driver "fbdev"
        Option "fbdev" "/dev/fb1"
      EndSection
      
  - launch X11 in /etc/rc.local:
  
      su -l chris -c startx &


** real vim

  # apt-get install vim-nox | vim

** enable I2C for users

  - in /etc/modprobe.d/raspi-blacklist.conf: comment out # i2c entry
  - in /etc/modules add:

    i2c-dev

  - create /etc/udev/rules.d/10-local_i2c_group.rules
  
    KERNEL=="i2c-[0-9]*", GROUP="i2c"

  # apt-get install i2c-tools python-smbus
  # usermod -a -G i2c chris
  # i2c-detect -y 0 

** tmux setup (window title, use ctrl-b)

  # apt-get install tmux

  - create $HOME/.tmuxconf:

set-option -g set-titles on
set-option -g set-titles-string "#T"

unbind C-b

set -g prefix C-a
bind-key a send-prefix

set -g history-limit 10000

  - color prompt in tmux: in $HOME/.bashrc modify and at 'screen' terminal:

...
case "$TERM" in
xterm*|rxvt*|screen)
...

** auto-start tmux session on remote ssh

  in $HOME/.bashrc:

if [ "$PS1" != "" -a "${STARTED_TMUX:-x}" = x -a "${SSH_TTY:-x}" != x ]
then
        STARTED_TMUX=1; export STARTED_TMUX
        sleep 1
        ( (tmux has-session -t remote && tmux attach-session -t remote) || (tmux new-session -s remote) ) && exit 0
        echo "tmux failed to start"
fi
	
** Use Green LED for own stuff

  - enable/disable LED mode
    # echo none >/sys/class/leds/led0/trigger
	# echo mmc0 >/sys/class/leds/led0/trigger
  - toggle LED
    # echo 1 >/sys/class/leds/led0/brightness
    # echo 0 >/sys/class/leds/led0/brightness

----- HowTo -----

** size of installed packages

  # dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n

